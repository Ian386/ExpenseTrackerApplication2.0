<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AJgJYMxgMwMYDAYwGFGMB//Z
</value>
  </data>
</root>